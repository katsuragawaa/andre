---
import { SEO } from 'astro-seo';
import i18next, { t, setDefaultNamespace } from 'i18next';
import { HeadHrefLangs } from 'astro-i18next/components';
import '@fontsource/material-icons-outlined';

export interface Props {
    title: string;
    description: string;
}

const { title, description } = Astro.props;

setDefaultNamespace('home');

const isEnglish = i18next.language === 'en';
---

<!DOCTYPE html>
<html lang={i18next.language}>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
        <link rel="manifest" href="/site.webmanifest" />
        <meta name="generator" content={Astro.generator} />
        <HeadHrefLangs />
        <SEO
            title={title}
            description={description}
            twitter={{ card: 'summary', site: 'katsuragawaa.github.io', creator: '@batatapalhaco' }}
            openGraph={{
                basic: {
                    type: 'website',
                    url: 'https://katsuragawaa.github.io/',
                    title: `${title} | see more at katsuragawaa.github.io`,
                    image: 'https://katsuragawaa.github.io/profile.png',
                },
                optional: {
                    description: description,
                    locale: i18next.language,
                    siteName: 'katsuragawaa.github.io',
                },
                image: {
                    alt: 'Andre Katsuragawa profile picture.',
                },
            }}
        />
    </head>
    <body class="bg-neutral-100 text-sm leading-6 dark:bg-neutral-900 dark:text-white">
        <nav class="top-0 z-10 flex h-16 w-full items-center justify-between px-8 md:sticky lg:px-24">
            <a href={t('nav.link')}>{t('nav.home')}</a>
            <div class="flex items-center gap-16">
                <select id="lang" name="lang" class="bg-inherit">
                    <option value="en" selected={isEnglish}>English</option>
                    <option value="pt" selected={!isEnglish}>Portugues</option>
                </select>
                <div class="material-icons-outlined cursor-pointer" id="mode">dark_mode</div>
            </div>
        </nav>
        <main class="m-auto min-h-[calc(100vh-64px-64px-32px)] max-w-xl px-6 py-24">
            <slot />
        </main>
        <footer class="mb-8 flex h-16 items-center justify-center gap-1 opacity-50">
            Â© 2022 Copyright:
            <a href="/" class="hover:underline">katsuragawaa.github.io</a>
        </footer>
        <style is:global>
            @import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap');
            html {
                font-family: 'Space Grotesk', system-ui, sans-serif;
            }
            code {
                font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono,
                    Courier New, monospace;
            }
        </style>
        <script>
            // dark mode
            if (localStorage.getItem('dark-mode') == 'true') {
                document.documentElement.classList.add('dark');
            } else {
                document.documentElement.classList.remove('dark');
            }

            const btn = document.querySelector('#mode') as HTMLDivElement;
            btn.addEventListener('click', (e) => {
                document.documentElement.classList.toggle('dark');
                localStorage.setItem('dark-mode', localStorage.getItem('dark-mode') == 'true' ? 'false' : 'true');
            });

            // language
            const selector = document.querySelector('#lang') as HTMLSelectElement;
            selector.addEventListener('change', (e: Event) => {
                const url = window.location.href;
                const base = window.location.host;

                const lang = (e.target as typeof selector).value as string;
                if (lang === 'en') {
                    window.location.assign(url.replace('/pt', ''));
                } else {
                    window.location.assign(url.replace(base, `${base}/pt`));
                }
            });
        </script>
    </body>
</html>
